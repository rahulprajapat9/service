'use strict'
/******************************************************************************
  STACK BASE
******************************************************************************/
const { h, hsvg } = require('_h')
const s           = require('_s')
/******************************************************************************
  STACK EXTEND
******************************************************************************/
var path          = require('path')
var urify         = require('urify')
var after         = require('after')
var defined       = require('defined')
/******************************************************************************
  CUSTOM
******************************************************************************/
const auth      = require('_auth')
/******************************************************************************
  ASSETS
******************************************************************************/
var owl = urify(path.join(__dirname, 'wai1.png'))
var owlavatar = urify(path.join(__dirname, 'wai1.png'))
var owlbase = urify(path.join(__dirname, 'owlbase.png'))
var blocks = urify(path.join(__dirname, 'blocks.png'))
var logout = urify(path.join(__dirname, 'logout.png'))
var chat = urify(path.join(__dirname, 'messages.png'))
var chatSelected = urify(path.join(__dirname, 'messages-selected.png'))
var skillbox = urify(path.join(__dirname, 'skillmap.png'))
var skillboxSelected = urify(path.join(__dirname, 'skillmap-selected.png'))
var settings = urify(path.join(__dirname, 'settings.png'))
/******************************************************************************
  MAIN
******************************************************************************/
module.exports    = header

function header (db, engine) {


  /*****************************/
  // THEME + LOCAL CACHE + DEFAULT VALUES
  var esovalightgreen = '#35E38A'
  var esovagreen = '#35E38A'
  var esovadarkgreen = '#32A971'
  var esovalightblue = '#6f68ae'
  var esovablue = '#43409a'
  var esovadarkblue = '#16243a'
  var lightbluegrey = '#D6DBE1'
  var esovaorange = '#FA9B68'
  var esovared = 'FA9B68'
  var esovapink = '#E44663'
  var esovapurple = '#9d267a'
  var esovalightpurple = '#cc8fba'
  var esovafont1 = 'Avenir Roman'
  var STATUS = {
    chaturl: 'https://gitter.im/wizardamigosinstitute/program/'
  } // @HACK UI STATUS'
  var CREDS = {
    id: undefined,
    token: undefined
  }
  var USER = {
    name: undefined,
    username: undefined,
    avatar: undefined
  }

  /*****************************/
  // INITIALIZE STYLING
  var x = s(`
    header {
      display: flex;
      margin-top: 40px;
      justify-content: center;
    }
    menubar {
      box-sizing: border-box;
      position: relative;
      display: flex;
      border-radius: 50px;
      height: 85px;
      justify-content: space-between;
      align-items: center;
      background-color: ${'#fff'};
      min-width: 900px;
      max-width: 1200px;
      width: 90%;
    }
    logo {
      box-sizing: border-box;
      position: relative;
      top: 2%;
      display: flex;
      justify-content: center;
      align-items: center;
      width: 265px;
      margin-left: auto;
      margin-right: auto;
      height: 150px;
      padding-left: 55px;
      padding-right: 60px;
    }
    logo-owl {
      cursor: pointer;
      z-index: 3;
      transform: scale(.5);
      position: relative;
      bottom: 10px;
    }
    logo-owlbase {
      position: absolute;
      top: 1%;
      left: 21.5%;
      z-index: 1;
    }
    logo-blocks {
      position: absolute;
      top: 5%;
      left: 8%;
      height: 130px;
      width: 235px;
      z-index: 2;
    }

    usernav {
      display: flex;
      align-items: center;
      width: 230px;
      height: 85px;
      flex-grow: 1;
      border-top-right-radius: 50px;
      border-bottom-right-radius: 50px;
      justify-content: space-between;
      border-left: 2px solid ${esovadarkgreen};
      background-color: ${esovagreen};
    }
    esovanav {
      display: flex;
      align-items: center;
      width: 220px;
      height: 85px;
      flex-grow: 1;
      margin-left: 15px;
      border-top-left-radius: 50px;
      border-bottom-left-radius: 50px;
    }

    skillbox {
      display: flex;
      position: absolute;
      top: 18px;
      width: 50px;
      height: 50px;
    }
    skillbox--hover {
      background-image: url(${skillboxSelected});
      background-repeat: no-repeat;
    }
    skillbox-link {
      position: absolute;
      top: 12px;
      left: 11px;
      width: 150px;
      display: flex;
      align-items: center;
      font-size: 18px;
      font-family: ${'Avenir Roman'};
      color: ${esovablue};
    }
    skillbox-item {
      padding-right: 15px;
    }

    chat {
      display: flex;
      position: absolute;
      top: 18px;
      left: 200px;
      width: 50px;
      height: 50px;
    }
    chat--hover {
      background-image: url(${chatSelected});
      background-position: center;
      background-repeat: no-repeat;
    }
    chat-link {
      position: absolute;
      top: 12px;
      left: 12px;
      display: flex;
      width: 150px;
      align-items: center;
      font-size: 18px;
      font-family: ${'Avenir Roman'};
      color: ${esovaorange};
    }
    chat-item {
      padding-right: 15px;
    }

    noprofile {
      display: flex;
      justify-content: space-around;
      padding: 8px;
      margin-left: 65px;
      width: 80px;
      border-radius: 50px;
    }
    profile {
      display: flex;
      justify-content: space-around;
      padding: 8px;
      margin-left: 25px;
      background-color: hsla(0, 0%, 0%, 0.15);
      width: 80px;
      border-radius: 50px;
    }
    logout { }
    settings { }
    logout-link { }
    settings-link { }

    avatar {
      display: flex;
      flex-direction: row;
      align-items: center;
    }
    noavatar {
      color: white;
      display: flex;
      flex-direction: row;
      align-items: center;
      cursor: pointer;
    }
    avatar-image {
      width: 65px;
      height: 65px;
      border-radius: 50px;
      box-shadow: -10px 10px 30px -20px #000;
      border: 5px white solid;
      margin-right: 7px;
      background-color: #eee;
    }
    avatar-name {
      color: white;
      display: flex;
      white-space: nowrap;
      flex-direction: column;
      align-items: flex-end;
      font-size: 18px;
      margin-right: 10px;
      margin-left: 10px;
      font-family: ${'Avenir Roman'};
    }
    name {
      font-size: 12px;
    }
    username {
      font-size: 18px;
    }
    noavatar--hover {
      color: ${esovablue};
    }
  `)


  /*****************************/
  // CHILD COMPONENTS & USED MODULES
  // ...


  /*****************************/
  // RENDER COMPONENT
  function renderHeader () {
    var vtree = h('div', { className: x('header', STATUS.header) }, [
      h('div', { className: x('menubar') }, [
        h('div',{ className: x('esovanav') }, [
          h('a', {
            onmouseover: onmouseover.bind('skillbox'),
            onmouseout: onmouseout.bind('skillbox'),
            onclick: go2currentlesson,
            className: x('skillbox', STATUS.skillbox), href: '/' }, [
            h('div', { className: x('skillbox-link') }, [
              h('img', { className: x('skillbox-item'), src: skillbox }),
              CREDS.id ? LOCALE["text/home:user"] : LOCALE["text/home:anon"]
            ])
          ]),
          h('a', {
            onmouseover: onmouseover.bind('chat'),
            onmouseout: onmouseout.bind('chat'),
            className: x('chat', STATUS.chat),
            href: STATUS.chaturl, target: '_blank' }, [
            h('div', { className: x('chat-link') }, [
              h('img', { className: x('chat-item'), src: chat }),
              LOCALE["text/messages"]
            ])
          ])
        ]),
        h('div', { className: x('logo') }, [
          h('img', {
            className: x('logo-owl'),
            onclick: function (event) {
              window.open('https://www.facebook.com/groups/369246343421803/', '_blank')
            },
            src: owl
          }),
          h('img', { className: x('logo-owlbase'), src: owlbase }),
          h('img', { className: x('logo-blocks'), src: blocks })
        ]),
        (CREDS||{}).id ? loggedIn() : loggedOut()
      ])
    ])
    // PUSH UPDATES
    engine.push({
      type: 'vtree',
      key: 'header',
      value: vtree
    })
    function loggedOut () {
      return h('div', { className: x('usernav') }, [
        h('div', { className: x('noprofile') }),
        h('div', {
          className: x('noavatar', STATUS['noavatar']),
          onmouseover: onmouseover.bind('noavatar'),
          onmouseout: onmouseout.bind('noavatar'),
          onclick: onsignin
        }, [
          h('div', { className: x('avatar-name') }, [
            LOCALE["text/profile:anon"]
          ]),
          h('img', { className: x('avatar-image'), src: owlavatar })
        ])
      ])
    }
    function loggedIn () {
      return h('div', { className: x('usernav') }, [
        h('div', { className: x('profile') }, [
          h('a', {
            className: x('logout'),
            href: '#logout',
            onclick: onlogout
          }, [
            h('img', { className: x('logout-link'), src: logout })
          ]),
          h('a', {
            className: x('settings'),
            href: 'https://github.com/settings/profile', target: '_blank'
          }, [
            h('img', { className: x('settings-link'), src: settings })
          ]),
        ]),
        h('div', { className: x('avatar') }, [
          h('div', { className: x('avatar-name') }, [
            h('div', { className: x('username') }, USER.username),
            h('div', { className: x('name') }, USER.name),
          ]),
          h('img', { className: x('avatar-image'), src: USER.avatar })
        ])
      ])
    }
  }


  /*****************************/
  // INCOMING COMMUNICATION CHANNELS
  db.on('put', function (key, value) {
    try { value = JSON.parse(value) } catch (e) { value = defined(value, {}) }

    if (key === 'esova-credentials') { // LISTEN TO
      if (CREDS.id !== value.id) {
        CREDS.id = value.id // UPDATE CACHE
        USER.name = value.name
        USER.username = value.username
        USER.avatar = value.avatar
        renderHeader() // ACT ON CHANGE
      }
    }
  })


  /*****************************/
  // INITIALIZE
  console.log('--------------------------------')
  console.log('INITIALIZE: header() component')
  console.log('--------------------------------')
  // @TODO: switchboarded db should recognize all automatically
  var LOCALE = {
    "text/home:anon": "",
    "text/home:user": "",
    "text/messages": "",
    "text/profile:anon": ""
  }
  var FIELDS = Object.keys(LOCALE).length
  var init = after(FIELDS, function (err) {
    if (err) db.put('ERROR', err)
    else {
      renderHeader()
      init = renderHeader
    }
  })
  db.on('put', function (key, value) {
    try { value = JSON.parse(value) } catch (e) { value = defined(value, {}) }

    if (LOCALE[key] !== undefined) {
      LOCALE[key] = value
      init()
    }
  })


  /*****************************/
  // HELPER
  function go2currentlesson (event) {
    event.preventDefault()
    db.get('esova-currentLesson', function (error, value) {
      if (error) value = '0'
      db.put('esova-lesson', value, function noop () { })
      db.put('MODE', 'skillbox')
    })
  }
  function onsignin (event) {
    event.preventDefault()
    auth(db, function noop (error, help) { })
  }
  function onlogout (event) {
    event.preventDefault()
    var creds = JSON.stringify({ status: 'logout' })
    function noop () { }
    db.put('esova-credentials', creds, noop)
    db.put('esova-currentLesson', '0', noop)
    db.put('esova-lesson', '0', noop)
  }
  function onmouseover (event) {
    var key = this
    STATUS[key] = key+'--hover' // is that ok? should it be db.put?
    renderHeader()
  }
  function onmouseout (event) {
    var key = this
    STATUS[key] = undefined //  // is that ok? should it be db.put?
    renderHeader()
  }
}
