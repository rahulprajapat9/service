'use strict';
window.gitter = { chat: { options: { disableDefaultChat: true } } }
var sidecar = require('gitter-sidecar').default.Chat

/******************************************************************************
  MAIN - gitterchat
******************************************************************************/
// <style>
//   .chat-embed-title {
//     flex: 1;
//     align-self: center;
//     padding-left: 1rem;
//     font-size: 12px;
//     letter-spacing: 1px;
//     text-transform: uppercase;
//   }
// </style>

// <div class="js-sidecar-status">... waiting for Sidecar</div>

// <div class="my-special-target-element"></div>

// <button class="js-gitter-toggle-chat-button">Toggle Chat</button>
// <button class="js-gitter-toggle-chat-button" data-gitter-toggle-chat-state="true">Open Chat</button>
// <button class="js-gitter-toggle-chat-button" data-gitter-toggle-chat-state="false">Close Chat</button>

// <button class="js-destroy-chat-button">Destroy Chat</button>
// <button class="js-create-chat-button">Create Chat</button>

// API

module.exports = function xxx (db, engine) {
  var options = {
    // NORMAL OPTIONS
    // --------------
    showChatByDefault: true,  // Whether to embed the chat on page load(true) or wait until the options.activation is resolved/clicked/interacted with(false).
    activationElement: undefined, // '.my-special-button', // false
    // When options.showChatByDefault is false, this is the element you have to click/interact with to get the chat to actually embed, "Open Chat" button.

    // host: "https://gitter.im/"
    // layout: "fixed"
    preload: true, // DEFAULT: false,
    room: 'codingamigos/chat', // DEFAULT: undefined
    // showChatByDefault: false
    targetElement: undefined, // '.my-special-target-element',
    // where to attach the chat
    useStyles: true, // DEFAULT true

    // SPECIAL OPTIONS - not part of regular, but window.gitter preInit "API"
    // --------------
    // disableDefaultChat: true // DEFAULT false
  }
  // window.gitter = { chat: { defaultChat: '', options: options } }


  db.get('chat', function (error, value) {

    options.targetElement = '.' + value
    // options.activationElement = document.querySelector('.' + value)
    // options.targetElement = document.querySelector('.' + value)

    var chat = new sidecar(options)
    // chat.options // get a readable copy of  options used for this chat
    // chat.toggleChat(isChatOpen) // toggle visibility
    // chat.show(true) .hide(false)
    // chat.destroy() // cleanup&remove any elements created by the embed
  })
  return []
}

// var chatElement = document.querySelector('.gitter-chat-embed')
//
// chatElement.addEventListener('gitter-chat-toggle', function(e) {
//     console.log(e.detail.state?'Chat Opened':'Chat Closed')
// })
// document.addEventListener('gitter-sidecar-ready', function eventHandler (e) {
//  // sidecar script has loaded and is available via window.gitter
//     var GitterChat = e.detail.Chat;
//     document.querySelector('.js-sidecar-status').innerHTML = 'Sidecar ready';
//     var chat;

//   document.addEventListener('gitter-sidecar-instance-started', function eventHandler (e) {
//  // `chat` was initialized
//     var chat = e.detail.chat // e.detail.state ?
//     chat.options.targetElement.forEach(function(targetElement) {
//       var actionBarElement = targetElement.querySelector('.gitter-chat-embed-action-bar')
//       actionBarElement.insertAdjacentHTML('afterbegin', '<div class="chat-embed-title">' + chat.options.room + '</div>')
//     })
//   })
